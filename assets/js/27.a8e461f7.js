(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{377:function(e,n,t){"use strict";t.r(n);var v=t(42),i=Object(v.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vue-js2-5入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-js2-5入门"}},[e._v("#")]),e._v(" Vue.js2.5入门")]),e._v(" "),t("p",[e._v("插值表达式 "+e._s(e.msg))]),e._v(" "),t("p",[e._v("挂载点、模板、实例\ntemplate 模板，放在挂载点里面的内容")]),e._v(" "),t("p",[e._v("v-text  转化为字符\nv-html  不转化")]),e._v(" "),t("p",[e._v("v-on:click     @click      事件\n@click=“trans”  事件名")]),e._v(" "),t("p",[e._v("methods:{}")]),e._v(" "),t("p",[e._v("v-bind:title      :title        属性\nv-bind:title=“BigTitle”    变量")]),e._v(" "),t("p",[e._v("v-model  双向绑定\nv-model=“msg”  变量名\n"),t("input",{directives:[{name:"model",rawName:"v-model",value:e.msg,expression:"msg"}],domProps:{value:e.msg},on:{input:function(n){n.target.composing||(e.msg=n.target.value)}}}),e._v(" 能运行\n（"),t("input",{directives:[{name:"model",rawName:"v-model:value",value:e.msg,expression:"msg",arg:"value"}],domProps:{value:e.msg},on:{input:function(n){n.target.composing||(e.msg=n.target.value)}}}),e._v(" 也能运行）")]),e._v(" "),t("p",[e._v("computed:{} 计算属性\n根据其他的数据项计算出来的结果")]),e._v(" "),t("p",[e._v("watch:{} 侦听器\n某一个数据或者计算属性的变化")]),e._v(" "),t("p",[e._v("v-if=“abc”   abc在data中取true或false值，会直接把数据项从dom上清除或写入\nv-show=“abc”  abc在data中·取true或false值，用css隐藏、显示数据项，还在dom里")]),e._v(" "),t("p",[e._v("v-for 循环展示数据\ndata:{ list:[1,2,3] }\n<li v-for=“item of list” :key=“”>"+e._s(e.item)),e._v("\n老师建议加上 key 值，提升性能\n每一次循环，key值不能相同\n<li v-for=“（item,index） of list” :key=“index”>"+e._s(e.item)),e._v("\n老师说index也不是最好的选择，但基础课程就不讲的那么深入了")]),e._v(" "),t("p",[e._v("—————————————")]),e._v(" "),t("p",[e._v(".push()\npush() 方法可向数组的末尾添加一个或多个元素，并返回新的长度。\n注意： 新元素将添加在数组的末尾。\n注意： 此方法改变数组的长度。\n提示： 在数组起始位置添加元素请使用 unshift() 方法。\n感悟：vue.js只是js的一个库，万变不离其宗，还是要学好js本身，这不，添加数据就抓瞎了。\n还有，写的时候在实例里面我老是忘记给数据加this.  这个要注意。")]),e._v(" "),t("p",[e._v("组件\nVue.component，和 template结合使用")]),e._v(" "),t("ul",[t("li",[e._v("全局组件，在 new Vue 外面，通过 Vue.component 定义的组件，如：\nVue.component(‘todo-item’,{ template:’")]),t("li",[e._v("item")]),e._v("’})"),e._v(" "),t("li",[e._v("局部组件，要在 new Vue 里面用 components 声明，如：\nvar TodoItem = { template:’")]),t("li",[e._v("item")]),e._v("’ }\nnew Vue=({ el:”#id”, components:{ ‘todo-item’ : TodoItem } …  })\n然后才能使用"),t("todo-item"),e._v("为组件"),e._v(" "),t("li",[e._v("props 传递值，重要")]),e._v(" "),t("li",[e._v("vue的组件和实例之间的关系：\n每一个vue的组件，也都是一个vue的实例。\n所以每一个vue的项目，是由一个个的vue的实例构建而成的。\n证明：可以在组件里面事件（如@click）和定义事件方法（methods:{}）\n也可以写data、computed等。")]),e._v(" "),t("li",[e._v("反过来，每一个vue实例，其实也是一个组件。")]),e._v(" "),t("li",[e._v("new Vue实例下面如果没有template，它会找到挂载点，把挂载点下面所有的dom标签当作它的template")]),e._v(" "),t("li",[e._v("理解：Vue.component相当于一个组件实例，new Vue相当于一个根实例？（有挂载点）")])],1),e._v(" "),t("p",[e._v("在vue中，父组件向子组件传递值，是通过属性的形式进行值的传递的。")]),e._v(" "),t("p",[e._v(".$emit()\nthis.$emit(\"自定义事件\")\n通过触发自定义事件，来给触发监听事件\n如下：向外触发自定义事件delete，传递这个事件的值this.index\nmethods:{\nclickHandle:function(){\nthis.$emit('delete',this.index)\n}\n}")]),e._v(" "),t("p",[e._v("splice()\nthis.todos.splice(index,1)\nsplice() 方法用于添加或删除数组中的元素。\narray.splice(index,howmany,item1,.....,itemX)")]),e._v(" "),t("ul",[t("li",[e._v("index  必需。规定从何处添加/删除元素。该参数是开始插入和（或）删除的数组元素的下标，必须是数字。")]),e._v(" "),t("li",[e._v('howmany 可选。规定应该删除多少元素。必须是数字，但可以是 "0"。如果未规定此参数，则删除从 index 开始到原数组结尾的所有元素。')]),e._v(" "),t("li",[e._v("item1, ..., itemX  可选。要添加到数组的新元素")])]),e._v(" "),t("p",[e._v("—————————————")]),e._v(" "),t("p",[e._v("vue-cli 脚手架工具")]),e._v(" "),t("p",[e._v("npm install —global vue-cli\n最新的：npm install -g @vue/cli\n安装了vue-cli以后，通过它创建一个todolist项目（这里先进入了桌面文件夹再创建）\ncd Desktop/\nvue init webpack todolist\n最新的：vue create my-project")]),e._v(" "),t("p",[e._v("（突然发现在我的电脑里已经可以直接安装和创建项目了，因为在vuex的课程里我跟着安装了，哈哈！）")]),e._v(" "),t("p",[e._v("cd todolist\nnpm run dev\n进入文件夹，启动项目")]),e._v(" "),t("p",[e._v("cd/ 进入根目录\n权限警告，加上sudo安装")]),e._v(" "),t("p",[e._v("脚手架内容介绍")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("build webpack配置文件\nconfig 开发环境和线上环境的配置文件\nnode_modules 项目的依赖\nsrc 源代码所放置的目录\nstatic 静态的资源")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("babel的编译\n浏览器的配置\neslint的一些检测规则的说明\n……都不需要更改")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("index.html 网页最外层的html的界面")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("在编写工程代码的时候，实际上主要在编写src下面的代码\nmain.js文件，是我们整个项目的入口文件")]),e._v(" "),t("p",[e._v("components:{App}这样写是因为键和值的名字都相同，相当于{ ‘App’:App}")]),e._v(" "),t("p",[e._v("单文件组件")]),e._v(" "),t("p",[e._v("Component template should contain exactly one root element.\ntemplate模板下，只能有一个最外层的包裹元素")]),e._v(" "),t("p",[e._v("—————————————")])])}),[],!1,null,null,null);n.default=i.exports}}]);